swagger: '2.0'
info:
  title: hackGPT API
  version: '1.0'
  description: An API to interact with multiple generative models
schemes:
  - http
produces:
  - application/json
tags:
  - name: chatGPT
    description: Text completion with chatGPT
  - name: GPT-3
    description: Text completion with GPT-3
  - name: Midjourney
    description: Image generation with Midjourney
definitions:
  ImageJob:
    type: object
    properties:
      prompt:
        type: string
        description: The prompt used to generate images
      upscale:
        type: boolean
        default: false
        description: Whether the images should be upscaled automatically or not
      id:
        type: string
        description: The ID of the job
      tasks:
        type: integer
        default: 1
        description: The number of tasks in the job
      images:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              description: The ID of the generated image
            url:
              type: string
              description: The URL of the generated image
            upscaled:
              type: boolean
              default: false
              description: Whether the image has been upscaled or not
            actions:
              type: array
              items:
                type: array
                items:
                  type: object
                  properties:
                    label:
                      type: string
                      description: The label of the action
                    id:
                      type: string
                      description: The ID of the action
  GPTConversation:
    type: object
    properties:
      response:
        type: string
        description: The response generated by ChatGPT.
      conversationId:
        type: string
        description: The ID of the conversation with ChatGPT.
  GPTCompletion:
    type: object
    properties:
      id:
        type: string
        description: A unique identifier for the text completion.
      object:
        type: string
        description: The type of the returned object. Always set to "text_completion".
      created:
        type: integer
        description: The Unix timestamp of when the text completion was created.
      model:
        type: string
        description: The ID of the ChatGPT model used to generate the text completion.
      choices:
        type: array
        items:
          type: object
          properties:
            text:
              type: string
              description: The generated text completion.
            index:
              type: integer
              description: The index of the choice in the list of choices returned by ChatGPT.
            logprobs:
              type: object
              description: Additional log probabilities associated with the generated text completion.
            finish_reason:
              type: string
              description: The reason why the text completion was finished.
        description: An array of one or more text completions generated by ChatGPT.
      usage:
        type: object
        properties:
          prompt_tokens:
            type: integer
            description: The number of tokens in the prompt.
          completion_tokens:
            type: integer
            description: The number of tokens in the generated text completion.
          total_tokens:
            type: integer
            description: The total number of tokens generated by ChatGPT.

paths:
  /chatgpt/conversation:
    get:
      summary: Get a response from chatGPT
      description: |
        Returns a response from chatGPT given a prompt and conversation ID.
      tags:
        - chatGPT
      parameters:
        - name: prompt
          in: query
          description: The prompt to give chatGPT.
          required: true
          type: string
        - name: conversationId
          in: query
          description: The ID of the conversation with chatGPT.
          required: false
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/GPTConversation'
  /gpt/conversation:
    get:
      summary: Get a response from GPT-3
      description: |
        Returns a response from GPT given a prompt and conversation ID.
      tags:
        - GPT-3
      parameters:
        - name: prompt
          in: query
          description: The prompt to give GPT-3.
          required: true
          type: string
        - name: conversationId
          in: query
          description: The ID of the conversation with GPT-3.
          required: false
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/GPTConversation'
    post:
      consumes:
        - application/json
      summary: Get a response from GPT-3
      description: |
        Returns a response from GPT-3 given a prompt and conversation ID.
      tags:
        - GPT-3
      parameters:
        - name: body
          in: body
          description: The JSON payload containing the prompt and conversation ID.
          required: true
          schema:
            type: object
            properties:
              prompt:
                type: string
                description: The prompt to give GPT-3.
              conversationId:
                type: string
                description: The ID of the conversation with GPT-3.
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/GPTConversation'
  /gpt/complete:
    post:
      consumes:
        - application/json
      summary: Get a text completion from GPT-3 model
      description: |
        Returns a text completion from GPT-3 given a prompt and other parameters.
      tags:
        - GPT-3
      parameters:
        - name: body
          in: body
          description: The JSON payload containing the prompt and other parameters.
          required: true
          schema:
            type: object
            properties:
              prompt:
                type: string
                description: The prompt to give GPT-3 model.
              temperature:
                type: number
                format: double
                description: The temperature to use when generating the text completion. Controls the randomness of the generated text.
                default: 0.8
              frequency_penalty:
                type: number
                format: double
                description: The frequency penalty to use when generating the text completion. Controls how often the model repeats itself.
                default: 0
              presence_penalty:
                type: number
                format: double
                description: The presence penalty to use when generating the text completion. Controls how often the model generates words that were not in the prompt.
                default: 0
              max_tokens:
                type: integer
                description: The maximum number of tokens to generate in the text completion.
                default: 100
              best_of:
                type: integer
                description: The number of responses generated, with the best one returned
                default: 1
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/GPTCompletion'

  /midjourney/imagine:
    get:
      summary: Generate Midjourney images based on a given prompt
      parameters:
        - name: prompt
          in: query
          required: true
          type: string
          description: The prompt to generate images from
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ImageJob'
      tags:
        - Midjourney
  /midjourney/job:
    get:
      summary: Get the status of a job
      parameters:
        - name: id
          in: query
          required: true
          type: string
          description: The ID of the job to get the status of
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ImageJob'
      tags:
        - Midjourney
  /midjourney/action:
    get:
      summary: Perform an action on an image
      tags:
        - Midjourney
      parameters:
        - name: imageId
          in: query
          required: true
          type: string
          description: The ID of the image to perform the action on
        - name: actionId
          in: query
          required: true
          type: string
          description: The ID of the action to perform
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ImageJob'
